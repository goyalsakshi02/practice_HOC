{"version":3,"sources":["navbar_element/navBar.js","redux/features/counterComp.js","CounterRedux.js","Page1.js","Page2.js","Dianapp.js","Counter1.js","App.js","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["NavBar","useDispatch","count","useSelector","state","react_default","a","createElement","Fragment","className","react_router_dom","to","src","counterSlice","createSlice","name","initialState","reducers","increment","action","decrement","actions","incrementBy","CounterRedux","dispatch","onClick","Page1","Page2","Dianapp","Counter1","App","navBar","react_router","path","element","src_Dianapp","src_CounterRedux","src_Page1","src_Page2","src_Counter1","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","counter","counterReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9a7aa47.chunk.js","sourcesContent":["\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./navbar.css\"\r\nimport React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nlet NavBar = () => {\r\n    let dispatch = useDispatch();\r\n\r\n   \r\n    let counterState = useSelector((state) => {\r\n        return state[\"counter\"];\r\n    });\r\n\r\n    let {count} = counterState;\r\n\r\n    return (\r\n        \r\n        <React.Fragment>\r\n            <nav className=\"navbar1\">\r\n                <div className=\"container\">\r\n                    <div className='dianapp'>\r\n                     <Link to={'/'} className=\"dian\"><img src=\"https://dianapps.com/assets/img/images/dianapps_logo.svg\" /></Link>\r\n                     </div>\r\n                    <div className=\"collapse\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/counter'} className=\"nav-link\">Counter</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/page1'} className=\"nav-link\">Page1</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={'/page2'} className=\"nav-link\">Page2</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                       \r\n                    <div className='dianapp'>\r\n                     <div className=\"butt\"><button>counter</button></div>\r\n                     <div className=\"ccc\"><Link to={'/count'} className=\"dians\">{count}</Link></div>\r\n                     </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default NavBar;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    count : 0\r\n}\r\n\r\nlet counterSlice = createSlice({\r\n    name : 'counter',\r\n    initialState : initialState,\r\n    reducers : {\r\n        increment : function (state , action){\r\n            state.count = state.count + 1\r\n        },\r\n        decrement : function (state , action){\r\n            state.count = state.count - 1\r\n        },\r\n        // incrementBy : function (state , action){\r\n        //     state.count = state.count + action.payload\r\n        // }\r\n    }\r\n});\r\nexport const {increment , decrement , incrementBy} = counterSlice.actions;\r\nexport default counterSlice.reducer;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {increment , decrement } from \"./redux/features/counterComp\";\r\n\r\nlet CounterRedux = () => {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    // get data from Redux Store\r\n    let counterState = useSelector((state) => {\r\n        return state[\"counter\"];\r\n    });\r\n\r\n    let {count} = counterState;\r\n\r\n    let clickIncr = () => {\r\n        dispatch(increment());\r\n    };\r\n\r\n    let clickDecr = () => {\r\n        dispatch(decrement());\r\n    };\r\n\r\n    // let clickIncrBy = () => {\r\n    //     dispatch(incrementBy(5));\r\n    // };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"contain\">\r\n                <div className=\"row\">\r\n                    <div className=\"wrap\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span onClick={clickDecr} className=\"button1\">-</span>\r\n                                <span className=\"num\">{count}</span>\r\n                                <span onClick={clickIncr} className=\"button2\">+</span>\r\n                                {/* <button onClick={clickIncrBy} className=\"btn btn-danger m-1\">Increment by 5</button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default CounterRedux;","import React from 'react';\r\nimport \"./App.css\"\r\nconst Page1 = () => {\r\n\r\n    return (\r\n       <div className='p1'>\r\n           <h1> Page 1</h1>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default Page1;","import React from 'react';\r\n \r\nconst Page2 = () => {\r\n    return (\r\n       <div className=\"p2\">\r\n          <h1>page 2</h1>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default Page2;","import React from 'react'\r\n\r\nconst Dianapp = () => {\r\n  return (\r\n    <div>\r\n        <div><h1>DIANAPPS</h1></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dianapp","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {increment , decrement } from \"./redux/features/counterComp\";\r\n\r\nlet Counter1 = () => {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n   \r\n    let counterState = useSelector((state) => {\r\n        return state[\"counter\"];\r\n    });\r\n\r\n    let {count} = counterState;\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"counter1\">\r\n                <div className=\"card1\">\r\n                    <span className=\"number\">{count}</span>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Counter1;","import React from 'react';\r\nimport './App.css';\r\nimport {Route , Routes} from \"react-router-dom\";\r\nimport NavBar from \"./navbar_element/navBar\";\r\nimport CounterRedux from \"./CounterRedux\";\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport Dianapp from './Dianapp';\r\nimport Counter1 from './Counter1';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar/>\r\n        <Routes>\r\n        <Route path={'/'} element={<Dianapp />}/>\r\n         <Route path={'/counter'} element={<CounterRedux />}/>\r\n         <Route path={'/page1'}   element={<Page1 />} />\r\n         <Route path={'/page2'}   element={<Page2 />} />\r\n         <Route path={\"/count\"}  element={<Counter1 />} />\r\n        </Routes>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport counterReducer from './features/counterComp';\r\n\r\nconst rootReducer = {\r\n    counter : counterReducer,\r\n}\r\nexport default rootReducer;","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer : rootReducer\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}